---
title: "Air Pollution and Asthma From 2010-2021"
format: pdf
editor: visual
---

## Introduction:

Asthma is a large problem around the world, especially in the USA where 1 in 12 people have the condition (1). The severity of asthma is largely genetic there are a variety of factors that can cause asthma including the environment.

Air quality is a large contributor to allergy and lung inflammation which leads to asthma (2). Air quality is affected by a variety of things, the largest contributor being fossil fuels. Fossil fuels emit many harmful pollutants that stay in the air for a long time, including ozone, nitrogen dioxide (NO2), and small particulate matter (PM10) that will be discussed. In addition, natural disasters such as wildfires and earthquakes can cause an increase in PM10. These pollutants cause inflammations that can lead to asthma attacks and increase the intensity and number of asthma attacks.Â 

Since the United States is large, there are many different lifestyles, climates, and topographies. This makes some states more suspectable to more asthma-prone conditions. Some states have more natural disasters than others such as California and Texas. California has wildfires and earthquakes while Texas is known for its tornados. In addition, the west coast and center of the United States are much dryer compared to other places which may indicate there is more particulate matter in the air. The urban cities also have more pollution due to cars and industries working there.

Considering all these factors, the purpose of this exploratory project is to see if there are any similar trends between pollutants and asthma prevalence between states.

## Methodology:

The data for the pollutants was obtained using the Air Quality System (AQS) API from the Environmental Protection Agency (EPA). The R package used to extract the data was 'RAQSAPI' which allowed you to gather data based on selected criteria. Three pollutants were selected including ozone (code:44201), NO2 (coded: 42602), and PM10 (coded: 81102). The yearly average for each of the pollutants for each state was gathered using a loop.

```{r, echo=FALSE, results='hide', cache=TRUE}

library(keyring)

keyring::key_set(service = "AQSDatamart", username = "luznya86@gmail.com")

library(RAQSAPI) 

datamartAPI_user <- "luznya86@gmail.com"
server <- "AQSDatamart"

aqs_credentials(username = datamartAPI_user, key = key_get(service = server, username = datamartAPI_user ) )
library(RAQSAPI)

bdate1 <- as.Date("20100101", format = "%Y%m%d")
edate1 <- as.Date("20101231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2010 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate1 ,  
                                      edate1 ,
                                      stateFIPS = as.character(j))
  polldata2010 <- rbind(polldata2010, report)                                    
}


bdate2 <- as.Date("20110101", format = "%Y%m%d")
edate2 <- as.Date("20111231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2011 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate2 ,  
                                      edate2 ,
                                      stateFIPS = as.character(j))
  polldata2011 <- rbind(polldata2011, report)                                    
}


bdate3 <- as.Date("20120101", format = "%Y%m%d")
edate3 <- as.Date("20121231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2012 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate3 ,  
                                      edate3 ,
                                      stateFIPS = as.character(j))
  polldata2012 <- rbind(polldata2012, report)                                    
}

bdate4 <- as.Date("20130101", format = "%Y%m%d")
edate4 <- as.Date("20131231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2013 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate4 ,  
                                      edate4 ,
                                      stateFIPS = as.character(j))
  polldata2013 <- rbind(polldata2013, report)                                    
}

bdate5 <- as.Date("20140101", format = "%Y%m%d")
edate5 <- as.Date("20141231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2014 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate5 ,  
                                      edate5 ,
                                      stateFIPS = as.character(j))
  polldata2014 <- rbind(polldata2014, report)                                    
}

bdate6 <- as.Date("20150101", format = "%Y%m%d")
edate6 <- as.Date("20151231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2015 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate6 ,  
                                      edate6 ,
                                      stateFIPS = as.character(j))
  polldata2015 <- rbind(polldata2015, report)                                    
}

bdate7 <- as.Date("20160101", format = "%Y%m%d")
edate7 <- as.Date("20161231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2016 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate7 ,  
                                      edate7 ,
                                      stateFIPS = as.character(j))
  polldata2016 <- rbind(polldata2016, report)                                    
}

bdate8 <- as.Date("20170101", format = "%Y%m%d")
edate8 <- as.Date("20171231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2017 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate8 ,  
                                      edate8 ,
                                      stateFIPS = as.character(j))
  polldata2017 <- rbind(polldata2017, report)                                    
}

bdate9 <- as.Date("20180101", format = "%Y%m%d")
edate9 <- as.Date("20181231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2018 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate9 ,  
                                      edate9 ,
                                      stateFIPS = as.character(j))
  polldata2018 <- rbind(polldata2018, report)                                    
}

bdate10 <- as.Date("20190101", format = "%Y%m%d")
edate10 <- as.Date("20191231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2019 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate10 ,  
                                      edate10 ,
                                      stateFIPS = as.character(j))
  polldata2019 <- rbind(polldata2019, report)                                    
}

bdate11 <- as.Date("20200101", format = "%Y%m%d")
edate11 <- as.Date("20201231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2020 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate11 ,  
                                      edate11 ,
                                      stateFIPS = as.character(j))
  polldata2020 <- rbind(polldata2020, report)                                    
}

bdate12 <- as.Date("20210101", format = "%Y%m%d")
edate12 <- as.Date("20211231", format = "%Y%m%d")
params <- c("44201", "42602", "81102")
polldata2021 <- data.frame()

state <- sprintf("%02d", 1:50)
for (j in state) {
  report <-aqs_annualsummary_by_state(params,
                                      bdate12 ,  
                                      edate12 ,
                                      stateFIPS = as.character(j))
  polldata2021 <- rbind(polldata2021, report)                                    
}

```

The data for the asthma data was obtained from Behavioral Risk Factor Surveillance System (BRFSS) Prevalence Data collected by the CDC through web scrapping. The R package used to extract the data was 'xml2' and 'rvest' along with the help of 'tidyverse'. The asthma number and prevalence data were collected by the state for each year. A loop was used to collect the majority of the data.

```{r, echo=FALSE, results='hide'}
library(xml2)
library(rvest)
library(tidyverse)

Asthmadatastate <- data.frame()

years <- 2011:2017

for (i in years) {
  url <- paste0("https://www.cdc.gov/asthma/brfss/", i, "/tableC1.htm")
  src <- read_html(url)
  print(url)
  
  nds1 <- html_elements(src, xpath = '//td | //th')
  
  str(nds1)
  
  pop1 <- html_text(nds1) 
  
  wable1 <- pop1 %>%
    matrix(ncol = 8, byrow = TRUE) %>%
    as.data.frame()
  wable1$Year <- i
  print(wable1)
  
  if (ncol(Asthmadatastate) == 0) {
    Asthmadatastate <- wable1
  } else {
    Asthmadatastate <- rbind(Asthmadatastate, wable1)
  }
}


## adding in 2010
url10 <- paste0("https://www.cdc.gov/asthma/brfss/2010/current/tableC1.htm")
src10 <- read_html(url10)
print(url10)

nds10 <- html_elements(src10, xpath = '//td | //th')

str(nds10)

pop10 <- html_text(nds10) 

wable10 <- pop10 %>%
  matrix(ncol = 8, byrow = TRUE) %>%
  as.data.frame()
wable10$Year <- 2010
print(wable10)

if (ncol(Asthmadatastate) == 0) {
  Asthmadatastate <- wable10
} else {
  Asthmadatastate <- rbind(Asthmadatastate, wable10)
}
#done

library(openxlsx)

brssf2018 <- read.xlsx("/Users/luzvillanueva/Desktop/Surv727/brssf2018.xlsx")
Asthmadatastate <- rbind(Asthmadatastate, brssf2018)


library(openxlsx)

brssf2019 <- read.xlsx("/Users/luzvillanueva/Desktop/Surv727/brssf2019.xlsx")
Asthmadatastate <- rbind(Asthmadatastate, brssf2019)

library(openxlsx)

brssf2020 <- read.xlsx("/Users/luzvillanueva/Desktop/Surv727/brssf2020.xlsx")
Asthmadatastate <- rbind(Asthmadatastate, brssf2020)

library(openxlsx)

brssf2020 <- read.xlsx("/Users/luzvillanueva/Desktop/Surv727/brssf2020.xlsx")
Asthmadatastate <- rbind(Asthmadatastate, brssf2020)

#adding in 2021
url21 <- paste0("https://www.cdc.gov/asthma/brfss/2021/tableC1.html")
src21 <- read_html(url21)
print(url21)

nds21 <- html_elements(src21, xpath = '//td | //th')

str(nds21)

pop21 <- html_text(nds21) 

wable21 <- pop21 %>%
  matrix(ncol = 8, byrow = TRUE) %>%
  as.data.frame()
wable21$Year <- 2021
print(wable21)

if (ncol(Asthmadatastate) == 0) {
  Asthmadatastate <- wable21
} else {
  Asthmadatastate <- rbind(Asthmadatastate, wable21)
}

```

Using the R packages, 'dplyr', 'tidyverse', and 'tidyr', the data was cleaned for only the needed columns such as the parameter, state, and pollution quantity for the AQS data. The data was merged and made wider by parameter.

```{r, echo=FALSE, results='hide'}

## this is the cleaning for the AQS data
library(tidyr)
library(dplyr)
library(tidyverse)


newpoll10 <- polldata2010 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))

newpoll11 <- polldata2011 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll12 <- polldata2012 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll13 <- polldata2013 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll14 <- polldata2014 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll15 <- polldata2015 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll16 <- polldata2016 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll17 <- polldata2017 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll18 <- polldata2018 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))
newpoll19 <- polldata2019 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))

newpoll20 <- polldata2020 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))

newpoll21 <- polldata2021 %>% 
  select(year, state, parameter, arithmetic_mean, first_max_value) %>% 
  group_by(state, parameter) %>% 
  summarise(pollution=mean(arithmetic_mean),
            Max=max(first_max_value),
            Year=mean(year))

allstates <- rbind(newpoll10, newpoll11, newpoll12, newpoll13, newpoll14, newpoll15,
                   newpoll16, newpoll17, newpoll18, newpoll19, newpoll20, newpoll21)

ozonzedata <- allstates %>% 
  filter(parameter=="Ozone")

NO2data <- allstates %>% 
  filter(parameter=="Nitrogen dioxide (NO2)")

PM10 <- allstates %>% 
  filter(parameter=="PM10 Total 0-10um STP")


## this is the cleaning for the webscrapping data

Asthmadatastate2 <- Asthmadatastate %>% 
  rename('state' = V1,
         'athsmaprevalence'= V7,
         'Prevalencepercent'=V3) 


library(dplyr)

Asthmadatastate3 <- Asthmadatastate2 %>%
  mutate(state = case_when(
    state == "AL" ~ "Alabama",
    state == "AK" ~ "Alaska",
    state == "AZ" ~ "Arizona",
    state == "AR" ~ "Arkansas",
    state == "CA" ~ "California",
    state == "CO" ~ "Colorado",
    state == "CT" ~ "Connecticut",
    state == "DE" ~ "Delaware",
    state == "FL" ~ "Florida",
    state == "GA" ~ "Georgia",
    state == "HI" ~ "Hawaii",
    state == "ID" ~ "Idaho",
    state == "IL" ~ "Illinois",
    state == "IN" ~ "Indiana",
    state == "IA" ~ "Iowa",
    state == "KS" ~ "Kansas",
    state == "KY" ~ "Kentucky",
    state == "LA" ~ "Louisiana",
    state == "ME" ~ "Maine",
    state == "MD" ~ "Maryland",
    state == "MA" ~ "Massachusetts",
    state == "MI" ~ "Michigan",
    state == "MN" ~ "Minnesota",
    state == "MS" ~ "Mississippi",
    state == "MO" ~ "Missouri",
    state == "MT" ~ "Montana",
    state == "NE" ~ "Nebraska",
    state == "NV" ~ "Nevada",
    state == "NH" ~ "New Hampshire",
    state == "NJ" ~ "New Jersey",
    state == "NM" ~ "New Mexico",
    state == "NY" ~ "New York",
    state == "NC" ~ "North Carolina",
    state == "ND" ~ "North Dakota",
    state == "OH" ~ "Ohio",
    state == "OK" ~ "Oklahoma",
    state == "OR" ~ "Oregon",
    state == "PA" ~ "Pennsylvania",
    state == "RI" ~ "Rhode Island",
    state == "SC" ~ "South Carolina",
    state == "SD" ~ "South Dakota",
    state == "TN" ~ "Tennessee",
    state == "TX" ~ "Texas",
    state == "UT" ~ "Utah",
    state == "VT" ~ "Vermont",
    state == "VA" ~ "Virginia",
    state == "WA" ~ "Washington",
    state == "WV" ~ "West Virginia",
    state == "WI" ~ "Wisconsin",
    state == "WY" ~ "Wyoming",
    TRUE ~ as.character(state)  # Keep other values unchanged
  ))



Asthmadatastate4 <- Asthmadatastate3 %>% 
  select(state, Prevalencepercent, athsmaprevalence, Year) %>% 
  filter(!is.na(as.numeric(Prevalencepercent)))


##this is the merge and final cleaning

#wider to make all fit in one table
alldatawider <- allstates %>% 
  select(state, Year, pollution, parameter) %>% 
  group_by(state, Year) %>%
  pivot_wider(names_from = parameter, values_from = pollution)

##merging the data sets
pollandasthma <- merge(Asthmadatastate4, alldatawider, by = c("Year", "state"))

## changing variable names to make easier
pollandasthma <- pollandasthma %>% 
  rename(PM10 = `PM10 Total 0-10um STP`,
         NO2 = `Nitrogen dioxide (NO2)`)

#Make thing NUMERIC!!! important for the plotting
pollandasthma <- pollandasthma %>% 
  mutate(Prevalencepercent = as.numeric(Prevalencepercent))

##for individual pollutants
ozonzedata1 <- merge(Asthmadatastate4, ozonzedata, by = c("Year", "state"))

ozonzedata1$athsmaprevalence <- gsub(",", "", ozonzedata1$athsmaprevalence)

ozonzedata1 <- ozonzedata1 %>% 
  mutate(athsmaprevalence = as.numeric(athsmaprevalence))

PM10_1 <- merge(Asthmadatastate4, PM10, by = c("Year", "state"))

PM10_1$athsmaprevalence <- gsub(",", "", PM10_1$athsmaprevalence)

PM10_1 <- PM10_1 %>% 
  mutate(athsmaprevalence = as.numeric(athsmaprevalence))

N02data1 <- merge(Asthmadatastate4, NO2data, by = c("Year", "state"))

N02data1$athsmaprevalence <- gsub(",", "", N02data1$athsmaprevalence)

N02data1 <- N02data1 %>% 
  mutate(athsmaprevalence = as.numeric(athsmaprevalence))


```

```{r}
write.csv(allstates, file = "allstates.csv", row.names = T)
```

To visualize the data, the R package 'latticeExtra' was used. This package allows to plot a double y-axis graph for each of the states. This package was used in the shiny object so that one can choose what state and pollutant trends they wish to see. The shiny object was created using the R package 'shiny'. This helps visualize what state and pollutant someone might want to see instead of having all the graphs all at once.

```{r, echo=FALSE}
library(shiny)
library(ggplot2)
library(latticeExtra)


ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(

      selectInput(inputId = "state", label = "Select State", choices = unique(pollandasthma$state)),

      selectInput(inputId = "pollutant", label = "Select Pollutant", choices = c( "Ozone", "PM10", "NO2"))
    ),
    mainPanel(

      plotOutput("line_plot")
    )
  )
)

server <- function(input, output) {

  filtered_data <- reactive({
    pollandasthma %>%
      filter(state == input$state)
  })
  
  output$line_plot <- renderPlot({
    y_variable <- switch(
      input$pollutant,
      Ozone = "Ozone",
      PM10 = "PM10",
      NO2 = "NO2"
    )
    
    obj1 <- xyplot(filtered_data()[[y_variable]] ~ Year | factor(state), filtered_data(), type = c("l", "g"), col='darkgreen' , ylab = "Pollutant Level", auto.key = list(space = "right", title = 'Pollutant'))
    obj2 <- xyplot(filtered_data()$Prevalencepercent ~ Year | factor(state), filtered_data(), type = c("l", "g"), col='black', ylab = "Prevalence Percent", auto.key = list(space = "right", title = "Asthma Prevalence"))
    combined_plot <- doubleYScale(obj2, obj1, add.ylab2 = TRUE, use.style=FALSE)
    
    print(combined_plot)
    
  })
}


shinyApp(ui = ui, server = server)
```

## Analysis:

To understand if there are any trends between the pollutant and asthma prevalence, as mentioned before, a double-axis plot was constructed for each state and pollutant. The most significant similarities for the pollutant ozone were states with high populations such as New York, Tennessee, Georgia, and Illinois as seen in Figure 1.Â  These states have higher populations which indicates a higher need for fossil fuels, which is where ozone comes from. A majority of the states did not have any significance, in actuality, a majority of rural states like Maine, Alaska, and Montana, had no real changes in trends , as seen in Figure 2. The ozone level for the more rural states was much lower than for the more populous states. Overall, there wasn't any significance in trends between ozone and asthma prevalence.

```{r, echo=FALSE}
#Figure 1
library(latticeExtra)
ozonemost <- ozonzedata1 %>% 
  filter(state %in% c('New York', 'Tennessee', 'Georgia', 'Illinois'))

custom_y_range <- c(5, 15)

ozonemostobj1 <- xyplot(pollution ~ Year | factor(state), ozonemost, type = c("l", "g"), col='darkgreen')
ozonemostobj2 <- xyplot(Prevalencepercent ~ Year | factor(state), ozonemost, type = c("l", "g"), col='red', ylim = custom_y_range)
doubleYScale(ozonemostobj1, ozonemostobj2, add.ylab2 = TRUE, use.style=F )


```

Figure 1: The similar trends with Ozone.

```{r, echo=FALSE}
#Figure 2
library(latticeExtra)
ozoneleasr <- ozonzedata1 %>% 
  filter(state %in% c('Maine', 'Alaska', 'Montana'))

custom_y_range <- c(5, 15)

ozone1mostobj1 <- xyplot(pollution ~ Year | factor(state), ozoneleasr, type = c("l", "g"), col='darkgreen')
ozone1mostobj2 <- xyplot(Prevalencepercent ~ Year | factor(state), ozoneleasr, type = c("l", "g"), col='red', ylim = custom_y_range)
doubleYScale(ozone1mostobj1, ozone1mostobj2, add.ylab2 = TRUE, use.style=F )



```

Figure 2: The different trends with Ozone.

PM10 was also visualized. PM10 was the pollutant of most interest due to the more direct impact on lung inflammation thus leading to higher asthma attacks which could in theory lead to higher asthma prevalence. The most significant similarities between the PM10 trend and the asthma prevalence trend are in Nevada, California, Texas, New Mexico, Â New Jersey, and Michigan as shown in Figure 3. These states are high in population and have high industrial facilities which correlates to a higher PM10 exposure. In addition, many of the states are known for their dry climates such as Nevada and California, a dryer climate may produce a lot more dust which increases PM10 in the air. Many of the less populous states such as South Dakota, Vermont, North Dakota, and Maine (Figure 4) do not have any real trends in their PM10 trends since they do not have much use for fossil fuels and are in more wetter climates. Overall, PM10 had interesting trends with asthma prevalence.

```{r, echo=FALSE}
#Figure 3
library(latticeExtra)
PM10_1most <- PM10_1 %>% 
  filter(state %in% c('California', 'Texas', 'Nevada', 'New Mexico', 'Michigan','New Jersy' ))

custom_y_range <- c(5, 15)

PM10_1mostobj1 <- xyplot(pollution ~ Year | factor(state), PM10_1most, type = c("l", "g"), col='darkgreen')
PM10_1mostobj2 <- xyplot(Prevalencepercent ~ Year | factor(state), PM10_1most, type = c("l", "g"), col='red', ylim = custom_y_range)
doubleYScale(PM10_1mostobj1, PM10_1mostobj2, add.ylab2 = TRUE, use.style=F )


```

Figure 3: The similar trends with PM10.

```{r, echo=FALSE}
#Figure 4
library(latticeExtra)
PM10_1leasr <- PM10_1 %>% 
  filter(state %in% c('South Dakota', 'North Dakota', 'Vermont', 'Maine' ))

custom_y_range <- c(5, 15)

PM10_2mostobj1 <- xyplot(pollution ~ Year | factor(state), PM10_1leasr, type = c("l", "g"), col='darkgreen')
PM10_2mostobj2 <- xyplot(Prevalencepercent ~ Year | factor(state), PM10_1leasr, type = c("l", "g"), col='red', ylim = custom_y_range)
doubleYScale(PM10_2mostobj1, PM10_2mostobj2, add.ylab2 = TRUE, use.style=F )



```

Figure 4: The different trends with PM10.

Nitrogen dioxide was also visualized using the double y-axis. NO2 is also interesting because it is such a large by-product of fuel fossil consumption and power plants, so it is expected to be quite high in largely urban and industrial facilities. The most significant similarities between the trend of NO2 and asthma prevalence are in the states, of Nevada, California, New York, Illinois, and Ohio as shown in Figure 5. These states again, are high in population (many major cities) and have a lot of industrial facilities. It makes sense for these states to have higher NO2 levels due to their higher consumption of fossil fuels. The states that had less trends are states that have low activity such as Louisiana, Kansas, and Utah (Figure 6), along with others. There is no real trend between them.Â  Overall, the visual data from NO2 is similar to that of PM10.

```{r, echo=FALSE}
#Figure 5

library(latticeExtra)
No2_1most <- N02data1 %>% 
  filter(state %in% c('California', 'New York', 'Nevada', 'Illinois', 'Ohio' ))

custom_y_range <- c(5, 15)

No2_1mostobj1 <- xyplot(pollution ~ Year | factor(state), No2_1most, type = c("l", "g"), col='darkgreen')
No2_1mostobj2 <- xyplot(Prevalencepercent ~ Year | factor(state), No2_1most, type = c("l", "g"), col='red', ylim = custom_y_range)
doubleYScale(No2_1mostobj1, No2_1mostobj2, add.ylab2 = TRUE, use.style=F )



```

Figure 5: The similar trends with NO2.

```{r, echo=FALSE}
#Figure 6

library(latticeExtra)
No2_1leas <- N02data1 %>% 
  filter(state %in% c('Louisiana', 'Kansas', 'Utah' ))

custom_y_range <- c(5, 15)

No2_2mostobj1 <- xyplot(pollution ~ Year | factor(state), No2_1leas, type = c("l", "g"), col='darkgreen')
No2_2mostobj2 <- xyplot(Prevalencepercent ~ Year | factor(state), No2_1leas, type = c("l", "g"), col='red', ylim = custom_y_range)
doubleYScale(No2_2mostobj1, No2_2mostobj2, add.ylab2 = TRUE, use.style=F )

```

Figure 6: The different trends with NO2.

## Conclusions:

This exploratory project had some interesting findings. According to the visual representations, ozone was not a major contributor to asthma prevalence. It may be that the concentration is much too low to induce lung inflammation. Even in locations where there is a high population and high fossil fuel activity, there was not a clear trend in the asthma prevalence with ozone. In terms of PM10 and NO2, there were more trends that could be followed especially for the states that have higher populations and fossil fuel activity. These states followed trends more closely.

The way I chose to determine if the lines were closely related is by looking at the trends and seeing if the highs and lows aligned because it is expected that with higher pollution rates, there would be higher asthma prevalence.Â 

I wanted to add a more qualitative measurement of similarity and I thought a correlation between them might work but it could not be added since the trends are not linear. Since the trend isn't linear, the correlations would not say anything significant. I added the code below to the supplement.

The limitation of this project is that this is all visualization data, this is not the complete answer to the exploration question. There are many future questions to be answered such as if there is a difference in child and adult asthma prevalence or to look at a closer time frame like monthly instead of yearly. Since the data is yearly there may have been a difference in asthma prevalence by month. In addition, it would also be interesting to look at asthma attacks and see if there are any trends there.

## Supplement:

In addition to further analysis, the correlation between all the states and pollutants was done using a loop and added to a table.

```{r, echo=FALSE, results='hide'}
## loop to make the correlations go faster
library(stats)

states <- unique(pollandasthma$state)

correlation_df <- data.frame(State = character(), Pollutant = character(), Correlation = numeric(), stringsAsFactors = FALSE)


for (state in states) {
  state_data <- subset(pollandasthma, state == state)
  
  pollutants <- c("PM10", "NO2", "Ozone")
  for (pollutant in pollutants) {

    correlation <- cor(state_data$Prevalencepercent, state_data[[pollutant]], use = "complete.obs")
    
    correlation_df <- rbind(correlation_df, data.frame(State = state, Pollutant = pollutant, Correlation = correlation))
  }
}

### clenaing the table to mke it easier to read

correlationtrend <- correlation_df %>% 
  pivot_wider(names_from = Pollutant, values_from = Correlation)


```

```{r, echo=FALSE}
print(correlationtrend )
```

## GitHub: https://github.com/luzmariav/FinalProject

## References:

1.  Asthma and Allergy Foundation of America. https://aafa.org/asthma/asthma-facts/#:\~:text=How%20Common%20Is%20Asthma%3F,about%201%20in%2012%20people.&text=More%20than%2022%20million%20U.S.%20adults%20ages%2018%20and%20older%20have%20asthma.
2.  American Lung Association. https://www.lung.org/lung-health-diseases/lung-disease-lookup/asthma/learn-about-asthma/what-causes-asthma
